[{"/Users/artur/Development/tests/Rick-and-Morty/client/src/index.tsx":"1","/Users/artur/Development/tests/Rick-and-Morty/client/src/reportWebVitals.ts":"2","/Users/artur/Development/tests/Rick-and-Morty/client/src/App.tsx":"3","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/index.ts":"4","/Users/artur/Development/tests/Rick-and-Morty/client/src/localStorage.ts":"5","/Users/artur/Development/tests/Rick-and-Morty/client/src/types.ts":"6","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/api.ts":"7","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/util.ts":"8","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Card/index.tsx":"9","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Dropdown/Dropdown.tsx":"10","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Body/index.tsx":"11","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Characters/index.tsx":"12","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Header/index.tsx":"13","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Input/Input.tsx":"14","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Modal/Login.tsx":"15","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Modal/ModaContainer.tsx":"16","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Modal/ModalHeader.tsx":"17","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Modal/ModalBody.tsx":"18","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Modal/Register.tsx":"19","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/card.ts":"20","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/actionTypes.ts":"21","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/modal.ts":"22","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/character.ts":"23","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/index.ts":"24","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/sagas/index.ts":"25","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/character.ts":"26","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/modal.ts":"27","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/episode.ts":"28","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/sagas/episode.ts":"29","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/sagas/character.ts":"30","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/episode.ts":"31","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/auth.ts":"32","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/auth.ts":"33","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/sagas/auth.ts":"34","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/card.ts":"35","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/LoginPage/index.tsx":"36","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Button/index.tsx":"37","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/favorite.ts":"38","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/sagas/favorite.ts":"39","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/favorite.ts":"40","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Character/index.tsx":"41","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Home/index.tsx":"42","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/About/index.tsx":"43"},{"size":616,"mtime":1609090890640,"results":"44","hashOfConfig":"45"},{"size":425,"mtime":1609074055699,"results":"46","hashOfConfig":"45"},{"size":1075,"mtime":1609195296378,"results":"47","hashOfConfig":"45"},{"size":877,"mtime":1609240625730,"results":"48","hashOfConfig":"45"},{"size":460,"mtime":1609090844673,"results":"49","hashOfConfig":"45"},{"size":858,"mtime":1609266562592,"results":"50","hashOfConfig":"45"},{"size":1286,"mtime":1609322783124,"results":"51","hashOfConfig":"45"},{"size":463,"mtime":1609110865795,"results":"52","hashOfConfig":"45"},{"size":1659,"mtime":1609279300681,"results":"53","hashOfConfig":"45"},{"size":1380,"mtime":1609342329381,"results":"54","hashOfConfig":"45"},{"size":1680,"mtime":1609339300044,"results":"55","hashOfConfig":"45"},{"size":3568,"mtime":1609324004410,"results":"56","hashOfConfig":"45"},{"size":1661,"mtime":1609243909612,"results":"57","hashOfConfig":"45"},{"size":1154,"mtime":1609111783960,"results":"58","hashOfConfig":"45"},{"size":2130,"mtime":1609243919910,"results":"59","hashOfConfig":"45"},{"size":345,"mtime":1609162819848,"results":"60","hashOfConfig":"45"},{"size":364,"mtime":1609162390867,"results":"61","hashOfConfig":"45"},{"size":265,"mtime":1609162811474,"results":"62","hashOfConfig":"45"},{"size":2327,"mtime":1609243914001,"results":"63","hashOfConfig":"45"},{"size":256,"mtime":1609173742693,"results":"64","hashOfConfig":"45"},{"size":3003,"mtime":1609322734406,"results":"65","hashOfConfig":"45"},{"size":512,"mtime":1609174240098,"results":"66","hashOfConfig":"45"},{"size":675,"mtime":1609322661899,"results":"67","hashOfConfig":"45"},{"size":354,"mtime":1609267628773,"results":"68","hashOfConfig":"45"},{"size":298,"mtime":1609267235858,"results":"69","hashOfConfig":"45"},{"size":1019,"mtime":1609265448501,"results":"70","hashOfConfig":"45"},{"size":902,"mtime":1609174032947,"results":"71","hashOfConfig":"45"},{"size":681,"mtime":1609173962395,"results":"72","hashOfConfig":"45"},{"size":1113,"mtime":1609174788119,"results":"73","hashOfConfig":"45"},{"size":1201,"mtime":1609322862573,"results":"74","hashOfConfig":"45"},{"size":444,"mtime":1609173682636,"results":"75","hashOfConfig":"45"},{"size":1054,"mtime":1609233559726,"results":"76","hashOfConfig":"45"},{"size":628,"mtime":1609194968674,"results":"77","hashOfConfig":"45"},{"size":1658,"mtime":1609254770166,"results":"78","hashOfConfig":"45"},{"size":592,"mtime":1609174120107,"results":"79","hashOfConfig":"45"},{"size":627,"mtime":1609243916937,"results":"80","hashOfConfig":"45"},{"size":315,"mtime":1609243897390,"results":"81","hashOfConfig":"45"},{"size":617,"mtime":1609272526846,"results":"82","hashOfConfig":"45"},{"size":1402,"mtime":1609272865363,"results":"83","hashOfConfig":"45"},{"size":465,"mtime":1609267612768,"results":"84","hashOfConfig":"45"},{"size":3556,"mtime":1609325793895,"results":"85","hashOfConfig":"45"},{"size":549,"mtime":1609342648196,"results":"86","hashOfConfig":"45"},{"size":4884,"mtime":1609342247863,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"14vr9ck",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"90"},"/Users/artur/Development/tests/Rick-and-Morty/client/src/index.tsx",[],["187","188"],"/Users/artur/Development/tests/Rick-and-Morty/client/src/reportWebVitals.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/App.tsx",["189"],"import React, { useEffect } from 'react';\nimport Header from './components/Header';\nimport Login from './components/Modal/Login';\nimport Register from './components/Modal/Register';\nimport Body from './components/Body';\nimport styles from './App.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from './store';\nimport { meAuth } from './store/actions/auth';\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isOpenLogin = useSelector((state: RootState) => state.modal.isOpenLogin);\n  const isOpenRegister = useSelector((state: RootState) => state.modal.isOpenRegister);\n  useEffect(()=> {\n    dispatch(meAuth())\n  },[])\n  return (\n    <Router>\n      <Switch>\n        <div className={styles.App}>\n          <Header />\n          <Body />\n          {\n            isOpenLogin ? <Login /> : null\n          }\n          {\n            isOpenRegister ? <Register /> : null\n          }\n        </div>\n      </Switch>\n    </Router>\n  );\n\n};\n\nexport default App;\n","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/index.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/localStorage.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/types.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/api.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/util.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Card/index.tsx",["190","191"],"import React, { useEffect, useState } from 'react';\nimport styles from './Card.module.css';\nimport notFound from '../../assets/notFound.jpeg';\nimport heart from '../../assets/heart.svg';\nimport heart_1 from '../../assets/heart_1.svg';\nimport spinner from '../../assets/tail-spin.svg';\n\ninterface Props {\n  image: string,\n  infoElement: JSX.Element,\n  extraInfoElement: JSX.Element,\n  isFav: boolean,\n}\n\n\nconst Card = ({ image, infoElement, extraInfoElement, isFav }: Props) => {\n  const [ isLoading, setIsLoading ] = useState(true);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = image; // by setting an src, you trigger browser download\n  \n    img.onload = () => {\n      // when it finishes loading, update the component state\n      setIsLoading(false);\n    }\n  }, []);\n\n  const defaultImg = (event: React.ChangeEvent<HTMLImageElement>) => {\n    event.target.src = notFound\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.page_content} >\n      {\n        isLoading ? \n        <div className={styles.spinnerContainer}>\n          <img className={styles.spinner} src={spinner} alt='' onError={defaultImg} /> \n        </div> :\n        <img className={styles.img} src={image} alt='' onError={defaultImg} />\n      }\n      <img className={styles.fav} src={isFav ? heart : heart_1} />\n        <div className={styles.card} >\n          <div className={styles.content} >\n          <h2 className={styles.title}>Fav</h2>\n            { extraInfoElement }\n          </div>\n        </div>\n      </div>\n      <div className={styles.description}>\n        { infoElement }\n      </div>\n    </div>\n  );\n};\n\nexport default Card;","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Dropdown/Dropdown.tsx",["192","193"],"import React, { useState } from 'react';\nimport styles from './Dropdown.module.css';\nimport { useDispatch } from 'react-redux';\nimport { sortCard } from '../../store/actions/card';\nimport { OrderBy, Order } from '../../types';\n\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst Dropdown = () => {\n  const [orderName, setOrderName] = useState('');\n  const dispatch = useDispatch();\n  let location = useLocation();\n  let history = useHistory();\n\n  const handleClick = (goTo: string) => {\n    history.push(`/${goTo}`);\n  }\n\n  const sort = (orderBy: OrderBy, order: Order, name: string) => {\n    setOrderName(name)\n    dispatch(sortCard(orderBy, order))\n  }\n\n  return (\n    <div className={styles.select_ctr}>\n      <div className={styles.input_preview}>{location.pathname === '/' ? '/home' : location.pathname }</div>\n      <div className={styles.options}>\n        <div className={styles.input} onClick={() => handleClick('')}>Home</div>\n        <div className={styles.input} onClick={() => handleClick('characters')}>Characters</div>\n        <div className={styles.input} onClick={() => handleClick('locations')}>Locations</div>\n        <div className={styles.input} onClick={() => handleClick('episodes')}>Episodes</div>\n        <div className={styles.input} onClick={() => handleClick('about')}>About</div>\n      </div>\n    </div>\n  )\n};\n\nexport default Dropdown;","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Body/index.tsx",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Characters/index.tsx",["194","195","196","197"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { getCharacters } from '../../store/actions/character';\nimport { getFavorites, addFavCharacter, RemoveFavCharacter } from '../../store/actions/favorite';\nimport { RootState } from '../../store';\nimport Card from '../Card';\nimport { ICharacter } from '../../types';\nimport styles from './Characters.module.css';\nimport Button from '../Button';\n\ninterface PropsCharacter {\n  character: ICharacter,\n}\n\nconst Status = ({ status }: { status: ICharacter['status']}) => {\n  const statusColor = status == 'Alive' ? styles.statusColorGreen : styles.statusColorRed;\n  return (\n    <div className={[styles.status, statusColor].join(' ')}/>\n  )\n}\nconst BuildInfo = ({ id, name, status, species, origin, episode }: ICharacter) => {\n  let history = useHistory();\n  const onClick = () => {\n    history.push(`/character/${id}`);\n  }\n  return (\n    <div className={styles.content}>\n      <div className={styles.title} onClick={onClick}>{name}</div>\n      <div className={styles.subtitle}><Status status={status}/>{status} - {species}</div>\n      <div className={styles.label}>Origin</div>\n      <div className={styles.text}>{origin.name}</div>\n      <div className={styles.label}>Episodes</div>\n      <div className={styles.text}>{episode.length}</div>\n    </div>\n  )\n}\n\nconst BuildExtaInfo = ({ id }: ICharacter, isFav: boolean) => {\n  const dispatch = useDispatch()\n  const addFav = () => {\n    dispatch(addFavCharacter(id));\n  }\n  const removeFav = () => {\n    dispatch(RemoveFavCharacter(id));\n  }\n  return (\n    <div className={styles.button_group}>\n      {\n        isFav ?\n        <Button text='Remove Fav' onClick={removeFav} /> :\n        <Button text='Add Fav' onClick={addFav} /> \n      }\n    </div>\n  )\n}\n\nconst Character = ({ character }: PropsCharacter) => {\n  const favorites = useSelector((state: RootState) => state.favorite.characters);\n  const isFav = Boolean(favorites.find(f => f.character_id == character.id));\n  const infoElement = BuildInfo(character);\n  const extraInfoElement = BuildExtaInfo(character, isFav);\n  return <Card image={character.image} infoElement={infoElement} extraInfoElement={extraInfoElement} isFav={isFav} />\n};\n\nconst Characters = () => {\n  const dispatch = useDispatch()\n  const characters = useSelector((state: RootState) => state.character.characters);\n  const next = useSelector((state: RootState) => state.character.info.next);\n  const prev = useSelector((state: RootState) => state.character.info.prev);\n  const pages = useSelector((state: RootState) => state.character.info.pages);\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    dispatch(getCharacters(page));\n  }, [page]);\n\n  useEffect(() => {\n    dispatch(getFavorites());\n  }, []);\n\n  const onPageChange = (page: string | null = '') => {\n  const nextPage = Number(page && page.replace('https://rickandmortyapi.com/api/character/?page=', ''))\n  if (nextPage && nextPage <= pages) {\n    setPage(nextPage);\n    }\n  }\n\n  return (\n    <>\n    <div className={styles.body}>\n      {\n        characters.map((character: ICharacter) => <Character key={character.id} character={character} />)\n      }\n    </div>\n    <div className={styles.pages}>\n      <Button text='Prev' onClick={() => onPageChange(prev)} /> \n      <span className={styles.pagesInfo}> page { page } of { pages } pages </span> \n      <Button text='Next' onClick={() => onPageChange(next)} />\n    </div>\n    </>\n  );\n};\n\nexport default Characters;","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Header/index.tsx",["198"],"import React from 'react';\nimport styles from './Header.module.css';\nimport Button from '../Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { openModalLogin, openModalRegister } from '../../store/actions/modal';\nimport { logout } from '../../store/actions/auth';\nimport { sortCard } from '../../store/actions/card';\nimport { OrderBy, Order } from '../../types';\nimport Dropdown from '../Dropdown/Dropdown';\nimport logo from '../../assets/rick-and-morty.png';\n\ninterface Props {\n}\n\nconst Header = (props: Props) => {\n  const isLogin = useSelector((state: RootState) => state.auth.authorized);\n  const username = useSelector((state: RootState) => state.auth.user?.username);\n\n  const dispatch = useDispatch();\n\n  const openLogin = () => {\n    dispatch(openModalLogin())\n  }\n\n  const openRegister = () => {\n    dispatch(openModalRegister())\n  }\n\n  const sort = (orderBy: OrderBy, order: Order) => {\n    dispatch(sortCard(orderBy, order))\n  }\n\n  const handleLogout = () => {\n    dispatch(logout())\n\n  }\n\n  return (\n    <header className={styles.header}>\n      <img className={styles.logo} src={logo} alt=\"Rick and Morty\" />\n      <Dropdown />\n      <div className={styles.button_group}>\n        {\n          !isLogin ?\n            <>\n              <Button onClick={openLogin} text='Login' />\n              <Button onClick={openRegister} text='Register' />\n            </> :\n            <>\n              <div className={styles.username}>Hi {username}</div>\n              <Button onClick={handleLogout} text='Logout' />\n            </>\n        }\n      </div>\n    </header>\n  )\n};\n\nexport default Header;","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Input/Input.tsx",["199"],"import React, { useState, useEffect } from 'react';\nimport styles from './Input.module.css';\n\ninterface Props {\n\tlabel: string\n\tvalue: string\n\tonChange: (value: string) => void\n\tcheckFields: boolean\n}\nconst Input = (props: Props) => {\n\tconst [error, setError] = useState('')\n\tconst { label, value, onChange, checkFields } = props;\n\n\tuseEffect(() => {\n\t\tif(checkFields){\n\t\t\tsetError(!value ? 'this field is required' : '')\n\t\t}\n\t}, [checkFields])\n\tconst onChangeValue = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\tonChange(event.target.value)\n\t};\n\n\tconst handleBlur = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\tsetError(!e.target.value ? 'this field is required' : '')\n\t};\n\n\treturn (\n\t\t<div className={styles.input_group}>\n\t\t\t<label className={`${styles.input_underlined} ${error ? styles.input_error : ''}`}>\n\t\t\t\t<input required className={styles.input} value={value} onChange={onChangeValue} onBlur={handleBlur}/>\n\t\t\t\t<span className={styles.input_label}>{label}</span>\n\t\t\t\t{\n\t\t\t\t\terror && <span className={styles.input_helper}>{error}</span>\n\t\t\t\t}\n\t\t\t</label>\n\t\t</div>\n\t)\n}\n\nexport default Input;","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Modal/Login.tsx",["200"],"import React, { useEffect, useState } from 'react';\nimport styles from './Modal.module.css';\nimport Input from '../Input/Input';\nimport Button from '../Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModalLogin } from '../../store/actions/modal';\nimport { login } from '../../store/actions/auth';\nimport ModaContainer from './ModaContainer';\nimport ModalBody from './ModalBody';\nimport ModalHeader from './ModalHeader';\nimport { RootState } from '../../store';\n\n\nconst Modal = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkFields, setCheckFields] = useState(false);\n  const [error, setError] = useState('');\n  const [isSubmit, setIsSubmit] = useState(false)\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state: RootState) => state.auth.loading);\n  const message = useSelector((state: RootState) => state.auth.message);\n  const authorized = useSelector((state: RootState) => state.auth.authorized);\n  const validateFields = (fields: string[]) => !fields.some(field => !field);\n\n  useEffect(() => {\n    if(!isLoading && isSubmit){\n      authorized ? onClose() : setError(message);\n    }\n  }, [isLoading]);\n\n  const onClose = () => {\n    dispatch(closeModalLogin())\n  }\n\n  const submit = () => { \n    const isValid = validateFields([email, password]);\n    if(isValid){\n      const item = {\n        email,\n        password,\n      }\n      setIsSubmit(true);\n      dispatch(login(item));\n    } else {\n      setCheckFields(true);\n    }\n  }\n  return (\n    <ModaContainer>\n        <ModalHeader title='LOGIN' onClose={onClose}/>\n        <ModalBody>\n          <form className={styles.container}>\n            <Input label='Email' value={email} onChange={setEmail} checkFields={checkFields}/>\n            <Input label='Password' value={password} onChange={setPassword} checkFields={checkFields}/>\n          </form>\n            <Button onClick={submit} text='Login' />\n            <div className={styles.error}>\n              { error }\n            </div>\n        </ModalBody>\n    </ModaContainer>\n  )\n};\n\nexport default Modal;","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Modal/ModaContainer.tsx",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Modal/ModalHeader.tsx",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Modal/ModalBody.tsx",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Modal/Register.tsx",["201"],"import React, { useState, useEffect } from 'react';\nimport styles from './Modal.module.css';\nimport Input from '../Input/Input';\nimport Button from '../Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModalRegister } from '../../store/actions/modal';\nimport { register } from '../../store/actions/auth';\nimport ModaContainer from './ModaContainer';\nimport ModalBody from './ModalBody';\nimport ModalHeader from './ModalHeader';\nimport { RootState } from '../../store';\n\nconst Modal = () => {\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkFields, setCheckFields] = useState(false);\n  const [error, setError] = useState('');\n  const [isSubmit, setIsSubmit] = useState(false)\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state: RootState) => state.auth.loading);\n  const message = useSelector((state: RootState) => state.auth.message);\n  const authorized = useSelector((state: RootState) => state.auth.authorized);\n\n  useEffect(() => {\n    if(!isLoading && isSubmit){\n      authorized ? onClose() : setError(message);\n    }\n  }, [isLoading]);\n\n  const validateFields = (fields: string[]) => !fields.some(field => !field);\n\n  const onClose = () => {\n    dispatch(closeModalRegister())\n  }\n\n  const submit = () => { \n    const isValid = validateFields([email, username, password]);\n    if(isValid){\n      const item = {\n        username,\n        email,\n        password,\n      }\n      setIsSubmit(true)\n      dispatch(register(item));\n    } else {\n      setCheckFields(true);\n    }\n  }\n  return (\n    <ModaContainer>\n        <ModalHeader title='REGISTER' onClose={onClose}/>\n        <ModalBody>\n          <form className={styles.container}>\n            <Input label='Email' value={email} onChange={setEmail} checkFields={checkFields}/>\n            <Input label='Username' value={username} onChange={setUsername} checkFields={checkFields}/>\n            <Input label='password' value={password} onChange={setPassword} checkFields={checkFields}/>\n          </form>\n            <Button onClick={submit} text='register' />\n            <div className={styles.error}>\n              { error }\n            </div>\n        </ModalBody>\n    </ModaContainer>\n  )\n};\n\nexport default Modal;","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/card.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/actionTypes.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/modal.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/character.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/index.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/sagas/index.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/character.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/modal.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/episode.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/sagas/episode.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/sagas/character.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/episode.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/auth.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/auth.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/sagas/auth.ts",["202","203"],"import { takeEvery, fork, put, call } from 'redux-saga/effects';\nimport * as actions from '../actions/auth';\nimport {\n  AuthActionTypes,\n  LOGIN,\n  LOGOUT,\n  REGISTER,\n  ME_AUTH,\n} from '../actions/actionTypes';\n\nimport { login, logout, register, meAuth } from '../api';\n\nfunction* handlerError(error: any) {\n  if(error.status == 401){\n    yield put(actions.setAuth(error.data))\n  }\n};\n\nfunction* fetchLogin(action: any) {\n  try {\n    const payload = yield call(login, action.user);\n    yield put(actions.setAuth(payload.data))\n  } catch (e) {\n    yield call(handlerError, e.response);\n  }\n}\n\nfunction* watchFetchLogin() {\n  yield takeEvery(LOGIN, fetchLogin);\n}\n\nfunction* fetchLogout(action: any) {\n  try {\n    const payload = yield call(logout);\n    yield put(actions.setAuth(payload.data))\n  } catch (e) {\n    yield call(handlerError, e.response);\n  }\n}\n\nfunction* watchFetchLogout() {\n  yield takeEvery(LOGOUT, fetchLogout);\n}\n\nfunction* fetchRegister(action: any) {\n  try {\n    const payload = yield call(register, action.user);\n    yield put(actions.setAuth(payload.data))\n  } catch (e) {\n    yield call(handlerError, e.response);\n  }\n}\n\nfunction* watchFetchRegister() {\n  yield takeEvery(REGISTER, fetchRegister);\n}\n\nfunction* fetchMeAuth(action: any) {\n  try {\n    const payload = yield call(meAuth);\n    yield put(actions.setAuth(payload.data))\n  } catch (e) {\n    yield call(handlerError, e.response);\n  }\n}\n\nfunction* watchFetchMeAuth() {\n  yield takeEvery(ME_AUTH, fetchMeAuth);\n}\nconst characterSagas = [\n  fork(watchFetchLogin),\n  fork(watchFetchLogout),\n  fork(watchFetchRegister),\n  fork(watchFetchMeAuth),\n];\n\nexport default characterSagas;","/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/card.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/components/LoginPage/index.tsx",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Button/index.tsx",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/actions/favorite.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/sagas/favorite.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/store/reducers/favorite.ts",[],"/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Character/index.tsx",["204","205","206","207","208","209"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getCharacter } from '../../store/actions/character';\nimport { getFavorites, addFavCharacter, RemoveFavCharacter } from '../../store/actions/favorite';\nimport { RootState } from '../../store';\nimport { ICharacter } from '../../types';\nimport styles from './Character.module.css';\nimport Button from '../Button';\nimport notFound from '../../assets/notFound.jpeg';\nimport heart from '../../assets/heart.svg';\nimport heart_1 from '../../assets/heart_1.svg';\nimport spinner from '../../assets/tail-spin.svg';\n\nconst Status = ({ status }: { status: ICharacter['status'] }) => {\n  const statusColor = status == 'Alive' ? styles.statusColorGreen : styles.statusColorRed;\n  return (\n    <div className={[styles.status, statusColor].join(' ')} />\n  )\n}\n\nconst Character = () => {\n  const { id }: { id: string } = useParams();\n  const dispatch = useDispatch()\n  const character = useSelector((state: RootState) => state.character.characterSelected);\n  const favorites = useSelector((state: RootState) => state.favorite.characters);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isFav, setIsFav] = useState(false);\n  useEffect(() => {\n    dispatch(getCharacter(Number(id)));\n  }, [id]);\n\n  useEffect(() => {\n    dispatch(getFavorites());\n  }, []);\n\n  useEffect(() => {\n    const isFav = Boolean(favorites.find(f => f.character_id == Number(id)));\n    setIsFav(isFav);\n  }, [favorites]);\n\n  const addFav = () => {\n    dispatch(addFavCharacter(Number(id)));\n  }\n  const removeFav = () => {\n    dispatch(RemoveFavCharacter(Number(id)));\n  }\n\n  useEffect(() => {\n    if (character) {\n      const img = new Image();\n      img.src = character.image;\n      img.onload = () => {\n        setIsLoading(false);\n      }\n    }\n  }, [character]);\n\n  const defaultImg = (event: React.ChangeEvent<HTMLImageElement>) => {\n    event.target.src = notFound\n  };\n\n  return (\n    <div className={styles.body}>\n      { !character ? <img className={styles.spinner} src={spinner} alt='' onError={defaultImg} /> :\n        (<>\n          <div className={styles.content}>\n            {\n              isLoading ?\n                <div className={styles.spinnerContainer}>\n                  <img className={styles.spinner} src={spinner} alt='' onError={defaultImg} />\n                </div> :\n                <img className={styles.img} src={character.image} alt='' onError={defaultImg} />\n            }\n            <div className={styles.fav_group}>\n              {\n                isFav ?\n                  <Button text='Remove Fav' onClick={removeFav} /> :\n                  <Button text='Add Fav' onClick={addFav} />\n              }\n              <img className={styles.fav} src={isFav ? heart : heart_1} />\n            </div>\n            <div className={styles.title}>{character.name}</div>\n            <div className={styles.subtitle}><Status status={character.status} />{character.status} - {character.species}</div>\n            <div className={styles.label}>Origin</div>\n            <div className={styles.text}>{character.origin.name}</div>\n            <div className={styles.text}>Total Episodes: {character.episode.length}</div>\n            <div className={styles.label}>Episodes List:</div>\n            <ul>\n              {\n                character.episode.map(episode => <li>{episode}</li>)\n              }\n            </ul>\n          </div>\n        </>)\n      }\n    </div>\n  );\n};\n\nexport default Character;","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/Home/index.tsx",["210"],"import React from 'react';\nimport styles from './Home.module.css';\nimport cover from '../../assets/rickandmorty.jpg';\nconst Home = () => {\n  return <div>\n    <img className={styles.cover} src={cover} alt=\"\" />\n    <div className={styles.text}>\n      This page consumes the Rick & Morty public API: <a href=\"https://rickandmortyapi.com\" target=\"_blank\">https://rickandmortyapi.com</a>. you can see all the characters, episodes and locations, you must register and log in to have access to all the information\n  </div>\n  </div>\n}\n\nexport default Home;","/Users/artur/Development/tests/Rick-and-Morty/client/src/components/About/index.tsx",["211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"import React from 'react';\nimport styles from './About.module.css';\nimport rick from '../../assets/rickCode.jpg';\n\nconst About = () => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.img}>\n        <img src={rick} alt=\"\" />\n      </div>\n      <div className={styles.text}>\n        <div className={styles.title}> About Arturo Liduena</div>\n        <p>\n          Software engineer / Developer. I am passionate about programming, write code quality, and constant learning. I enjoy working with the latest technologies. I am the type of developer who loves what he does. Self-learner that wish to constantly grow and improve as a software engineer.\n        </p>\n\n        <div className={styles.title}>\n          About This Page (Frontend and Backend)\n        </div>\n        <p>\n          An application, with backend(node.js / Express) and frontend(React / Redux), which consume the public API of Rick & Morty: https://rickandmortyapi.com. This API is consumed from your backend  application, not directly from the frontend.\n        </p>\n        <div className={styles.subtitle}>\n          functionalities:\n        </div>\n        <ul>\n          <li>\n            Login : The users can be authenticated to consume the application. The auth keep the state between reloads.\n          </li>\n          <li>\n            List all character’s view with name, status, origin, number of Episodes and an indicator to know if a character is in fav list.\n          </li>\n          <li>\n            Detail character’s view .\n          </li>\n          <li>\n            button to add the character to a fav list, in case the character is in fav list it can be removed from fav list.\n          </li>\n          <li>\n            404 page.\n          </li>\n          <li>\n            The user information for login and the fav list are stored in a DB (Posgres).\n          </li>\n          <li>\n            we added some tests.\n          </li>\n          <li>\n            A register page for new users.\n          </li>\n          <li>\n            Backend pagination.\n          </li>\n          <li>\n            Preload images and a loader.\n          </li>\n        </ul>\n\n        <div className={styles.title}>\n          Frontend\n        </div>\n        <p>\n          The frontend was built in React with Hooks and Redux. This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\n          list of major frameworks and library that was used to built this project.\n        </p>\n        <ul>\n          <li><a href=\"https://reactjs.org/\" target=\"_blank\">react</a></li>\n          <li><a href=\"https://www.typescriptlang.org/\" target=\"_blank\">Typescript</a></li>\n          <li><a href=\"https://redux.js.org/\" target=\"_blank\">Redux</a></li>\n          <li><a href=\"https://redux-saga.js.org/\" target=\"_blank\">redux-saga</a></li>\n          <li><a href=\"https://reactrouter.com/\" target=\"_blank\">react-router</a></li>\n          <li><a href=\"https://react-redux.js.org/next/api/hooks\" target=\"_blank\">react-redux-hooks</a></li>\n          <li><a href=\"https://reactjs.org/docs/hooks-intro.html\" target=\"_blank\">react-hooks</a></li>\n          <li><a href=\"https://github.com/axios/axios\" target=\"_blank\">axios</a></li>\n          <li><a href=\"https://jestjs.io/docs/en/getting-started.html\" target=\"_blank\">jest</a></li>\n          <li><a href=\"https://testing-library.com/docs/react-testing-library/intro/\" target=\"_blank\">react testing library</a></li>\n          <li><a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\" target=\"_blank\">Flexbox css</a></li>\n          <li><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\" target=\"_blank\">css grid</a></li>\n          <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\" target=\"_blank\">localstorage</a></li>\n        </ul>\n        <div className={styles.title}>\n          Backend\n        </div>\n        <p>\n          The backend was biult made in Express, list of major frameworks and library that was used to build this project.\n        </p>\n        <ul>\n          <li><a href=\"https://nodejs.org/en/\" target=\"_blank\">node.js</a></li>\n          <li><a href=\"https://expressjs.com/\" target=\"_blank\">express</a></li>\n          <li><a href=\"https://github.com/expressjs/session\" target=\"_blank\">express-session</a></li>\n          <li><a href=\"https://github.com/axios/axios\" target=\"_blank\">axios</a></li>\n          <li><a href=\"http://www.passportjs.org/\" target=\"_blank\">passportjs</a></li>\n          <li><a href=\"http://www.passportjs.org/packages/passport-local/\" target=\"_blank\">passport-local</a></li>\n          <li><a href=\"https://github.com/brianc/node-postgres\" target=\"_blank\">pg</a></li>\n          <li><a href=\"https://sequelize.org/\" target=\"_blank\">sequelize</a></li>\n        </ul>\n      </div>\n    </div>)\n}\n\nexport default About;",{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":21,"column":5,"nodeType":"238","endLine":21,"endColumn":7,"suggestions":"239"},{"ruleId":"236","severity":1,"message":"240","line":27,"column":6,"nodeType":"238","endLine":27,"endColumn":8,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":42,"column":7,"nodeType":"244","endLine":42,"endColumn":67},{"ruleId":"245","severity":1,"message":"246","line":10,"column":10,"nodeType":"247","messageId":"248","endLine":10,"endColumn":19},{"ruleId":"245","severity":1,"message":"249","line":19,"column":9,"nodeType":"247","messageId":"248","endLine":19,"endColumn":13},{"ruleId":"250","severity":1,"message":"251","line":17,"column":30,"nodeType":"252","messageId":"253","endLine":17,"endColumn":32},{"ruleId":"250","severity":1,"message":"251","line":60,"column":60,"nodeType":"252","messageId":"253","endLine":60,"endColumn":62},{"ruleId":"236","severity":1,"message":"237","line":75,"column":6,"nodeType":"238","endLine":75,"endColumn":12,"suggestions":"254"},{"ruleId":"236","severity":1,"message":"237","line":79,"column":6,"nodeType":"238","endLine":79,"endColumn":8,"suggestions":"255"},{"ruleId":"245","severity":1,"message":"249","line":30,"column":9,"nodeType":"247","messageId":"248","endLine":30,"endColumn":13},{"ruleId":"236","severity":1,"message":"256","line":18,"column":5,"nodeType":"238","endLine":18,"endColumn":18,"suggestions":"257"},{"ruleId":"236","severity":1,"message":"258","line":30,"column":6,"nodeType":"238","endLine":30,"endColumn":17,"suggestions":"259"},{"ruleId":"236","severity":1,"message":"258","line":29,"column":6,"nodeType":"238","endLine":29,"endColumn":17,"suggestions":"260"},{"ruleId":"245","severity":1,"message":"261","line":4,"column":3,"nodeType":"247","messageId":"248","endLine":4,"endColumn":18},{"ruleId":"250","severity":1,"message":"251","line":14,"column":19,"nodeType":"252","messageId":"253","endLine":14,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":16,"column":30,"nodeType":"252","messageId":"253","endLine":16,"endColumn":32},{"ruleId":"236","severity":1,"message":"237","line":31,"column":6,"nodeType":"238","endLine":31,"endColumn":10,"suggestions":"262"},{"ruleId":"236","severity":1,"message":"237","line":35,"column":6,"nodeType":"238","endLine":35,"endColumn":8,"suggestions":"263"},{"ruleId":"250","severity":1,"message":"251","line":38,"column":62,"nodeType":"252","messageId":"253","endLine":38,"endColumn":64},{"ruleId":"236","severity":1,"message":"264","line":40,"column":6,"nodeType":"238","endLine":40,"endColumn":17,"suggestions":"265"},{"ruleId":"242","severity":1,"message":"243","line":81,"column":15,"nodeType":"244","endLine":81,"endColumn":75},{"ruleId":"266","severity":1,"message":"267","line":8,"column":93,"nodeType":"268","endLine":8,"endColumn":108},{"ruleId":"266","severity":1,"message":"267","line":67,"column":46,"nodeType":"268","endLine":67,"endColumn":61},{"ruleId":"266","severity":1,"message":"267","line":68,"column":57,"nodeType":"268","endLine":68,"endColumn":72},{"ruleId":"266","severity":1,"message":"267","line":69,"column":47,"nodeType":"268","endLine":69,"endColumn":62},{"ruleId":"266","severity":1,"message":"267","line":70,"column":52,"nodeType":"268","endLine":70,"endColumn":67},{"ruleId":"266","severity":1,"message":"267","line":71,"column":50,"nodeType":"268","endLine":71,"endColumn":65},{"ruleId":"266","severity":1,"message":"267","line":72,"column":67,"nodeType":"268","endLine":72,"endColumn":82},{"ruleId":"266","severity":1,"message":"267","line":73,"column":67,"nodeType":"268","endLine":73,"endColumn":82},{"ruleId":"266","severity":1,"message":"267","line":74,"column":56,"nodeType":"268","endLine":74,"endColumn":71},{"ruleId":"266","severity":1,"message":"267","line":75,"column":72,"nodeType":"268","endLine":75,"endColumn":87},{"ruleId":"266","severity":1,"message":"267","line":76,"column":87,"nodeType":"268","endLine":76,"endColumn":102},{"ruleId":"266","severity":1,"message":"267","line":77,"column":81,"nodeType":"268","endLine":77,"endColumn":96},{"ruleId":"266","severity":1,"message":"267","line":78,"column":82,"nodeType":"268","endLine":78,"endColumn":97},{"ruleId":"266","severity":1,"message":"267","line":79,"column":94,"nodeType":"268","endLine":79,"endColumn":109},{"ruleId":"266","severity":1,"message":"267","line":88,"column":48,"nodeType":"268","endLine":88,"endColumn":63},{"ruleId":"266","severity":1,"message":"267","line":89,"column":48,"nodeType":"268","endLine":89,"endColumn":63},{"ruleId":"266","severity":1,"message":"267","line":90,"column":62,"nodeType":"268","endLine":90,"endColumn":77},{"ruleId":"266","severity":1,"message":"267","line":91,"column":56,"nodeType":"268","endLine":91,"endColumn":71},{"ruleId":"266","severity":1,"message":"267","line":92,"column":52,"nodeType":"268","endLine":92,"endColumn":67},{"ruleId":"266","severity":1,"message":"267","line":93,"column":76,"nodeType":"268","endLine":93,"endColumn":91},{"ruleId":"266","severity":1,"message":"267","line":94,"column":65,"nodeType":"268","endLine":94,"endColumn":80},{"ruleId":"266","severity":1,"message":"267","line":95,"column":48,"nodeType":"268","endLine":95,"endColumn":63},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["271"],"React Hook useEffect has a missing dependency: 'image'. Either include it or remove the dependency array.",["272"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'orderName' is assigned a value but never used.","Identifier","unusedVar","'sort' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["273"],["274"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has missing dependencies: 'authorized', 'isSubmit', 'message', and 'onClose'. Either include them or remove the dependency array.",["276"],["277"],"'AuthActionTypes' is defined but never used.",["278"],["279"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["280"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"281","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"290","fix":"292"},{"desc":"293","fix":"294"},{"desc":"281","fix":"295"},{"desc":"296","fix":"297"},"Update the dependencies array to be: [dispatch]",{"range":"298","text":"299"},"Update the dependencies array to be: [image]",{"range":"300","text":"301"},"Update the dependencies array to be: [dispatch, page]",{"range":"302","text":"303"},{"range":"304","text":"299"},"Update the dependencies array to be: [checkFields, value]",{"range":"305","text":"306"},"Update the dependencies array to be: [authorized, isLoading, isSubmit, message, onClose]",{"range":"307","text":"308"},{"range":"309","text":"308"},"Update the dependencies array to be: [dispatch, id]",{"range":"310","text":"311"},{"range":"312","text":"299"},"Update the dependencies array to be: [favorites, id]",{"range":"313","text":"314"},[740,742],"[dispatch]",[783,785],"[image]",[2778,2784],"[dispatch, page]",[2843,2845],[430,443],"[checkFields, value]",[1208,1219],"[authorized, isLoading, isSubmit, message, onClose]",[1183,1194],[1346,1350],"[dispatch, id]",[1409,1411],[1539,1550],"[favorites, id]"]